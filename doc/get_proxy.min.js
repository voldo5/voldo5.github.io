function get_proxy(){let markup;return'\n<h3>proxy</h3>\n<p>Proxy is an object in javascript which wraps an object or a function\nand monitors it via something called target. Proxies enable you to intercept\nand customize operations performed on objects.</p>\n<fieldset>\n<legend>JavaScript</legend>\n<pre><code class="language-javascript">\nlet proxied = new Proxy(target, handler);\n</code></pre>\n</fieldset>\n<p><strong>target</strong> - The target object, actions on <strong>this</strong> object \n (getting, setting, etc...) will be routed trough the handler.</p>\n <p><strong>handler</strong> -  An object that can define "traps" for intercepting \n actions on the target object (getting, setting, etc...).</p>  \n<h5>Examples from project:</h5> \n<ul>\n<li>Proxy variable iSelectedRow. Issue: <a href="javascript:booklet.navigateRegularPages(\'get_activateIcon\', \'Activate Edit Icon\');">\nActivate Edit icon.</a></li>\n</ul>\n<fieldset>\n<legend>JavaScript</legend>\n<div class="legend2">table.js</div>\n<pre><code class="language-javascript">\nclass Table {\nconstructor() {\t\t\n\tthis.defaultSelectedRow = { row: -1 };\n\tthis.iSelectedRow = new Proxy(this.defaultSelectedRow, this.activateIcon);\n  }\n</code></pre>\n</fieldset>\n'}