function get_class(){let markup;return'\n<h3>Class</h3>\n<p>A class is an object template which defines how objects of that type behave.\nClass should contain a constructor - a special method for creating and initializing\nan object created with a class. Class also can contain instance and static methods,\ngetters and setters.</p>\n<fieldset>\n<legend>JavaScript</legend>\n<pre><code class="language-javascript">\nclass User {\n    constructor(name) {\n      // invokes the setter\n      this.name = name;\n    }\n  \n    get name() {\n      return this._name;\n    }\n  \n    set name(value) {\n      if (value.length < 4) {\n        alert("Name is too short.");\n        return;\n      }\n      this._name = value;\n    }  \n}\n  \nlet user = new User("John");\nalert(user.name); // John  \nuser = new User(""); // Name is too short.\n</code></pre></fieldset>\n<h5>Examples from project:</h5>\n<ul>\n<li>Issue:\n<a href="javascript:booklet.navigateRegularPages(\'get_tableContainer\', \'Table Class\');">\nTable Class.</a></li>\n</ul>\n<fieldset>\n<legend>JavaScript</legend>\n<div class="legend2">table.js</div>\n<pre><code class="language-javascript">  \nclass Table {\n    constructor(contacts, container) {\t\t\n      this.table = null;\n      this.contacts = contacts;\n      this.container = container;\t\t\n    }\n  \n    displayTable = () => {  \n      // create container header (not a part of table)\n      let tableContainerHeader = this.CreateTableContainerHeader();\n      // create table \t\t\n      this.table = document.createElement(\'table\');\n      this.table.classList.add(\'table\');\n    }\n}      \n</code></pre></fieldset>\n'}