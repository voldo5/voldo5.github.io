function get_position(){let markup;return'\n<h3>position</h3>\n<p>The position property specifies the type of positioning method used\nfor an element (static, relative, fixed, absolute or sticky).\nGet data for header from table context.</p>\n<ul>\n<li>position: <u>static</u> - elements is positioned according to the normal flow of the page.\nStatic positioned elements are not affected by the top, bottom, left, and right properties.\n</li>\n<li>position: <u>relative</u> - elements is positioned relative to its normal position.\nSetting the top, right, bottom, and left properties of a relatively-positioned\nelement will cause it to be adjusted away from its normal position.\n</li>\n<li>position: <u>fixed</u> - elements is positioned relative to the viewport,\nwhich means it always stays in the same place even if the page is scrolled.\n</li>\n<li>position: <u>absolute</u> - elements is positioned relative to the nearest\n positioned ancestor (instead of positioned relative to the viewport, like fixed).\n</li>\n<li>position: <u>sticky</u> - elements is positioned based on the user\'s scroll position.\nIt is positioned relative until a given offset position is met in the viewport - \nthen it "sticks" in place (like position:fixed)..\n</li>\n</ul>\n\n<h5>Examples from project:</h5>\n<ul>\n<li>Sticky table 1st row. Issue:\n<a href="javascript:booklet.navigateRegularPages(\'get_tableHeader1stRow\', \'Table Header 1st Row\');">\nTable Header 1st Row.</a>\n<fieldset>\n<legend>CSS</legend>\n<div class="legend2">table.css</div>\n<pre><code class="language-css">\n.table-tr1-head-cell {\n    position: sticky;\n    top: 0;\n    z-index: 9999;         \n}\n</code></pre></fieldset>\n</li></ul>\n<p>It is interesting, that we should made th (table header cell) sticky but not tr (table row).</p>\n'}