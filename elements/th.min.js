class th{constructor(cellClases,containerType,containerClasses){this.cellClases=cellClases,this.containerType=containerType,this.containerClasses=containerClasses,this.iconContainers=[],this.inputContainers=[]}iconContainer(iconContainerType,iconContainerClasses,dataAttrib,tooltipText,onClick){const iconContainer=new IconContainer(iconContainerType,iconContainerClasses,dataAttrib,tooltipText,onClick);return this.iconContainers.push(iconContainer),this.lastIconContainer=iconContainer,this}addIcon(iconClasses){return this.lastIconContainer.addIcon(iconClasses),this}addDropdownContainer(dropdownContainerType,dropdownContainerClasses){return this.lastIconContainer.addDropdownContainer(dropdownContainerType,dropdownContainerClasses),this.lastDropdownContainer=this.lastIconContainer.lastDropdownContainer,this}addDropdownItem(itemType,itemClass,itemOnClick,itemText,iconClass){return this.lastDropdownContainer.addDropdownItem(itemType,itemClass,itemOnClick,itemText,iconClass),this}inputContainer(inputContainerType,inputContainerClasses,onClick){const inputContainer=new InputContainer(inputContainerType,inputContainerClasses,onClick);return this.inputContainers.push(inputContainer),this.lastInputContainer=inputContainer,this}addIconContainerWithIcon(iconContainerType,iconContainerClasses,dataAttrib,tooltipText,iconClasses,onClick){return this.lastInputContainer.iconContainer(iconContainerType,iconContainerClasses,dataAttrib,tooltipText,onClick).addIcon(iconClasses),this}addInput(inputType,placeholder,inputClasses){return this.lastInputContainer.addInput(inputType,placeholder,inputClasses),this}toHtml(){return`<th class = "${this.cellClases}">\n        <${this.containerType} class = "${this.containerClasses}">\n                    ${this.iconContainers.map(ic=>ic.toHtml()).join("")}  \n                    ${this.inputContainers.map(ip=>ip.toHtml()).join("")}\n        </${this.containerType}>                     \n                </th>`}}