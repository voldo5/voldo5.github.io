function get_supplementalRow(){let markup;return'\n<h3>Issue. Add Supplemental Row to the table.</h3>\n<p>Make it possible to display an additional row below the row \nwith contact information. In this row we will display additional\ninformation about the person: portrait photo,\navatar, photo of real estate, google address map and so on</p>\n<h5>Fig.1</h5>        \n<img src="\\assets\\picsDoc\\doc_supplementalRow.jpg" alt="Supplemenatal Row"\nclass="img-responsive" width="600" height="400">\n<br>\n\n<h4>Code.</p>\n<h5><strong>Keywords: </strong></h5>\n<h5>1. Add Table class method to insert supplemental row.</h5>\n<fieldset>\n<legend>JavaScript</legend>\n<div class="legend2">table.js</div>\n<pre><code class="language-javascript">\ninsertSupplementalRow = (iRow) => {\n\n    let row = this.table.insertRow(iRow);\n    row.classList.add(\'table-tr-data\');\n    row.classList.add(\'table-tr-supplemental\');\n    let cell = row.insertCell();\n    cell.colSpan = this.table.rows[0].cells.length;\n    cell.classList.add(\'table-tr-data-cell\');\n\n    return row;\n};\n</code></pre></fieldset>\n<p>We will call this method every time when we need a supplemental row.\nCss class \'table-tr-supplemental\' is used to distinguish between\na normal data row and an supplemental row.</p>\n<fieldset>\n<legend>CSS</legend>\n<div class="legend2">table.css</div>\n<pre><code class="language-css">\n.table-tr-data {\n    display: table-row;\n}\n.table-tr-data-cell {\n    display: table-cell;    \n    z-index: 1;\n    padding: 0 4px;\n    margin: 0;\n    border: solid #eee;\n    border-width: 0 1px 1px 0;\n    border-spacing: 0;\n    border-collapse: separate;\n    vertical-align: top;\n    cursor: default;\n    overflow: initial !important;    \n    word-break: break-all;    \n}\n</code></pre></fieldset>\n\n<h5>2. Add method to insert photo in the supplemental row.</h5>\n<p>If the user tries to insert the same photo once more time, then\nsupplemental row will close - row is toggling.</p>\n<fieldset>\n<legend>JavaScript</legend>\n<div class="legend2">table.js</div>\n<pre><code class="language-javascript">\nputImageToSupplementalRow(photoName, cssClassName, iRowClickedIndex) {\n\n    let iRow = iRowClickedIndex + 1;\n    let currentRow = this.table.rows[iRow];\n    let rowIndex = currentRow.rowIndex;    \n    \n    if (currentRow.classList.contains("table-tr-supplemental")) {\n        let cell = currentRow.cells[0];\n        if (cell.children.length > 0) {\n            let childrenClasses = this.getCellChildrenClasses(cell);\t\t\t\t\n\n            // delete supplemental row (toggle row by click on button)\t\t\t\t\n            if (childrenClasses.includes(cssClassName)) {\t\t\t\t\t\n                this.table.deleteRow(rowIndex);\n                return -1;\n            }\n            else { // put photo to supplemental row\n                let div = this.putImageToDiv(photoName, cssClassName);\n                currentRow.cells[0].children[0].appendChild(div);\n            }\n        }\n        return iRow;\n    }\n    else {  // add supplemental row and put photo\n        let supplementalRow = this.insertSupplementalRow(iRow);\t\t\t\n        let container = this.putImageToFlexContainer(photoName, cssClassName);\n        supplementalRow.cells[0].appendChild(container);\n        return iRow;\t\t\t\n    }\n}\t\n</code></pre></fieldset>\n<p>We put image to div container and if it the first image in row -\nput div container in the flex container.</p>\n<fieldset>\n<legend>JavaScript</legend>\n<div class="legend2">table.js</div>\n<pre><code class="language-javascript">\nputImageToDiv(name, cssClassName){\n\n    let div = document.createElement("div");\n    div.classList.add("item");\t\t\n    div.classList.add(cssClassName);\n    if(name !== \'map\'){\n        div.style.backgroundImage = "url(\'/assets/photos/" + name + "\')";\n    }\t\t\n    div.style.display = \'block\';\n\n    return div;\t\t\n}\t\n</code></pre></fieldset>\n<fieldset>\n<legend>JavaScript</legend>\n<div class="legend2">table.js</div>\n<pre><code class="language-javascript">\nputImageToFlexContainer(photoName, cssClassName) {\n\n    let div = this.putImageToDiv(photoName, cssClassName);\n\n    let container = document.createElement("div");\n    container.classList.add("flex-container");\n    container.appendChild(div);\n\n    return container;\n}\t\n</code></pre></fieldset>\n\n<fieldset>\n<legend>CSS</legend>\n<div class="legend2">table.css</div>\n<pre><code class="language-css">\n.flex-container {\n    display: flex;      \n    flex-direction: column;\n    width:100%;\n    min-height: 44px;\n    align-items: center;     \n    text-align: center;    \n  }\n</code></pre></fieldset>\n\n\n\n\n'}