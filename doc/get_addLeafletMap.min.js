function get_addLeafletMap(){let markup;return'\n<h3>Issue. Add Leaflet API for Open Street Map.</h3>  \n<p>Add \'locate\' icon(blue) to the cells in \'address\' column.\nIf a user click on the icon, then Open Street Map with address location is\ndisplayed in the supplemental Row.</p>     \n<img src="\\assets\\picsDoc\\doc_leafletMap.jpg" alt="Leaflet Open Street Map"\nclass="img-responsive" width="233" height="272">\n<br>\n\n<h4>Code.</p>\n<h5><strong>Keywords: </strong></h5>\n\n<h5>1. Load the Leaflet JavaScript API to use Open Street Map.</h5>\n<p>OpenStreetMap is a map of the world that is free to use under an open license.\nLeaflet is a open-source JavaScript library for iteraction with OpenStreetMap.</p> \n<fieldset>\n    <legend>HTML</legend>\n    <div class="legend2">index.html</div>\n\t<script type="text/plain" class="language-markup">\t\t\t\t\n\x3c!-- leaflet map --\x3e\n<script integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="\n\tsrc="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js" crossorigin="" async defer>\n<\/script>\t\n<\/script>\n</fieldset>\n<p>See at\n<a href="https://leafletjs.com/" target="_blank">Leaflet JavaScript library.</a></p>\n\n<h5>2. Add map to the supplemental row: add icon to the \'address\' cell,\nadd the onclick function to insert the map in the supplemental row.</h5>\n<fieldset>\n<legend>JavaScript</legend>\n<div class="legend2">table.js</div>\n<pre><code class="language-javascript">\nPopulateTable() {\t\t\n    //....\n    else if (this.tableHeaderContext.cellContexts[i].name === "address") {  // address \t\t\n        cell.innerHTML = this.getInnerHtmlForCellAddress(cellValue, item);\n    }\n    //....\n}\n\ngetInnerHtmlForCellAddress(cellValue, item) {\n\n    let innerHtml = "";\n    cellValue = this.getAddress(item);\n    if (cellValue != null && String(cellValue) !== \' \') {\n        //todo default geo\n        let mapMarkerText = "";\n        let lat = 0;\n        let lng = 0;\n        if ("geo" in item.address) {\n            lat = item.address.geo.lat;\n            lng = item.address.geo.lng;\n            mapMarkerText = item.address.street + \', \'\n                + item.address.city + \', \'\n                + item.address.zipcode;\n        }\n\n        let name = \'map\';\n        //...\n        cssCellClassName = \'osm-map\';\n        let onClickOpenStreetMap = `(function(){\t\n                                let iRowClickedIndex = event.target.closest(\'tr\').rowIndex;\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                let iSupplementalRow = table.putImageToSupplementalRow(\'${name}\', \'${cssCellClassName}\', iRowClickedIndex);\n                                if(iSupplementalRow > 0) {\n                                    let cell = table.table.rows[iSupplementalRow].cells[0];\n                                    table.openStreetMapLoad(\'${lat}\', \'${lng}\', \'${mapMarkerText}\', cell, iSupplementalRow);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                }\n                                })()`;\n        //...        \n\n        innerHtml = (new td("", []))\n            .iconContainer("span", `tooltip fade shiftOsm`, "data-tooltip", "Display OpenStreet Map", onClickOpenStreetMap)\n            .addIcon("openStreetMapMarkerIcon fa fa-map-marker")          \n            .textContainer(\'span\', \'searchble-txt\', cellValue)\n            .toHtml();\n    }\n\n    return innerHtml;\n}\n</code></pre></fieldset>\n\n<p>In the listener: the mehod putImageToSupplementalRow() open the supplemental row and\nadd empty div container to row cell. The method openStreetMapLoad() get data from ops map\nand put them in the div container.</p>\n<fieldset>\n<legend>JavaScript</legend>\n<div class="legend2">table.js</div>\n<pre><code class="language-javascript">\nopenStreetMapLoad(lat, lng, mapMarkerText, cell, iRowMap) {\n    if (cell.children.length < 1)\n        return;\n\n    var container = cell.children[0];\n\n    // remove-add div for map update (otherwise map instance error)\n    for (let i = 0; i < cell.children[0].children.length; i++) {\n        let child = cell.children[0].children[i];\n        if (child.classList.contains(\'osm-map\')) {\n            container.removeChild(child);\n        }\n    }\n\n    // div for map display\n    var div = document.createElement(\'div\');\n    let id = \'osm-map\' + String(iRowMap);\n    div.id = id;\n    div.style.display = \'block\';\n    div.classList.add(\'osm-map\');\n    div.classList.add(\'item\');\n    container.appendChild(div);\n\n    var map = L.map(id).setView([lat, lng], 17);\n\n    // add an OpenStreetMap tile layer  \n    L.tileLayer(\'http://{s}.tile.osm.org/{z}/{x}/{y}.png\', {\n        attribution: \'&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors\'\n    }).addTo(map);\n\n    // add a marker and bindPopup(\'some information\')\n    L.marker([lat, lng]).addTo(map).bindPopup(mapMarkerText).openPopup();\n}\n</code></pre></fieldset>\n\n<fieldset>\n    <legend>CSS</legend>\n    <div class="legend2">table.css</div>\n    <pre><code class="language-css">\n    .openStreetMapMarkerIcon { \n        display:inline;  \n        color:#00aff0;\n        font-size: 1.0rem;\n        font-weight: bold;\n        cursor: pointer; \n        margin: 0 0.4rem 0 0rem; \n    } \n </code></pre>\n</fieldset>\n'}